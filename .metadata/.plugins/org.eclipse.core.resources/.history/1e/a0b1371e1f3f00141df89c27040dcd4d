package huntTheWumpus;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.GridLayout;
import java.awt.Point;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;

import javax.imageio.ImageIO;
import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JTabbedPane;

public class wumpusGUI extends JFrame
{
	private JPanel graphicalView;
	private JPanel textView;
	private JPanel buttons;
	private JPanel movementButtons;
	private JPanel arrowButtons;
	private JPanel gameViewPanel;
	private JTabbedPane gameView;
	private GridLayout movementButtonsLayout;
	private JButton upButton;
	private JButton downButton;
	private JButton rightButton;
	private JButton leftButton;
	private JButton fireButton;
	private ImageIcon[][] graphicMap;

	public wumpusGUI(Point hunter)
	{
		setTitle("Hunt the Wumpus");
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setLayout(new FlowLayout());

		gameView = new JTabbedPane();

		setSize(1000, 700);
		graphicalView = new JPanel();
		//graphicalView.setPreferredSize(new Dimension(640, 640));
		graphicalView.setBackground(Color.BLACK);
		graphicalView.setLayout(new GridLayout(10, 10));
		for(int i = 0; i < 100; i++)
		{
		BufferedImage emptyRoom = null;
		try {
			emptyRoom = ImageIO.read(new File("images/emptyRoom.png"));
		}
		catch(IOException err)
		{
			err.printStackTrace();
		}
		JLabel empty = new JLabel(new ImageIcon(emptyRoom));
		
		
			graphicalView.add(empty);
		}
		
		textView = new JPanel();
		//textView.setPreferredSize(new Dimension(640, 640));
		textView.setBackground(Color.WHITE);
		buttons = new JPanel();
		buttons.setPreferredSize(new Dimension(320, 640));
		movementButtonsLayout = new GridLayout(0, 3);

		//buttons.setLayout(new BoxLayout(buttons, getDefaultCloseOperation()));
		JPanel sudoPanel = new JPanel();
		sudoPanel.setPreferredSize(new Dimension(300, 200));
		//sudoPanel.setBackground(Color.GRAY);

		buttons.add(sudoPanel);

		movementButtons = new JPanel();
		movementButtons.setPreferredSize(new Dimension(320, 200));
		movementButtons.setBorder(BorderFactory.createEmptyBorder(10, 10, 10,
				10));
		//movementButtons.setLocation(50, 50);
		//movementButtons.setBounds(0, 50, 100, 100);
		//movementButtons.setBackground(Color.BLACK);
		movementButtons.setLayout(movementButtonsLayout);

		movementButtons.add(new JLabel(""));

		upButton = new JButton();
		upButton.setSize(20, 20);
		upButton.setText("^");
		movementButtons.add(upButton);

		movementButtons.add(new JLabel(""));

		leftButton = new JButton();
		leftButton.setSize(20, 20);
		leftButton.setText("<");
		movementButtons.add(leftButton);

		downButton = new JButton();
		downButton.setSize(20, 20);
		downButton.setText("v");
		movementButtons.add(downButton);

		rightButton = new JButton();
		rightButton.setSize(20, 90);
		//rightButton.setLocation(50,700);
		rightButton.setText(">");
		movementButtons.add(rightButton);

		//movementButtons.setLocation(400, 400);
		buttons.add(movementButtons);

		arrowButtons = new JPanel();
		arrowButtons.setPreferredSize(new Dimension(100, 100));
		fireButton = new JButton();
		fireButton.setText("FIRE!!!!");
		fireButton.setPreferredSize(new Dimension(90, 90));
		arrowButtons.add(fireButton);
		buttons.add(arrowButtons);

		gameView.add("Graphic", graphicalView);
		gameView.add("Text", textView);
		gameView.setPreferredSize(new Dimension(640, 640));
		gameViewPanel = new JPanel();
		gameViewPanel.setPreferredSize(new Dimension(640, 650));
		gameViewPanel.add(gameView);

		add(buttons);
		add(gameViewPanel);
		
	
				

		setVisible(true);
	}
	
	public void updateRoom(char stat, int x, int y)
	{
		
		
				
	}
}
